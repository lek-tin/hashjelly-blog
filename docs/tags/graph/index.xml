<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graph on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/graph/</link>
    <description>Recent content in Graph on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Fri, 21 Feb 2020 01:20:58 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/graph/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Is Graph Bipartite</title>
      <link>http://www.hashnopolis.com/post/2020/02/is-graph-bipartite/</link>
      <pubDate>Fri, 21 Feb 2020 01:20:58 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2020/02/is-graph-bipartite/</guid>
      <description>Given an undirected graph, return true if and only if it is bipartite.
Recall that a graph is bipartite if we can split it&amp;rsquo;s set of nodes into two independent subsets A and B such that every edge in the graph has one node in A and another node in B.
The graph is given in the following form: graph[i] is a list of indexes j for which the edge between nodes i and j exists.</description>
    </item>
    
    <item>
      <title>Largest Component Size by Common Factor</title>
      <link>http://www.hashnopolis.com/post/2020/02/largest-component-size-by-common-factor/</link>
      <pubDate>Tue, 11 Feb 2020 23:25:11 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2020/02/largest-component-size-by-common-factor/</guid>
      <description>Given a non-empty array of unique positive integers A, consider the following graph:
1. There are A.length nodes, labelled A[0] to A[A.length - 1]; 2. There is an edge between A[i] and A[j] if and only if A[i] and A[j] share a common factor greater than 1.
Return the size of the largest connected component in the graph.
Example 1: Input: [4,6,15,35] Output: 4  Example 2: Input: [20,50,9,63] Output: 2  Example 3:  Input: [2,3,6,7,4,12,21,39] Output: 8  Note:  1 &amp;lt;= A.</description>
    </item>
    
    <item>
      <title>Clone Graph</title>
      <link>http://www.hashnopolis.com/post/2019/08/clone-graph/</link>
      <pubDate>Sun, 11 Aug 2019 01:12:12 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/08/clone-graph/</guid>
      <description>Given a reference of a node in a connected undirected graph, return a deep copy (clone) of the graph. Each node in the graph contains a val (int) and a list (List[Node]) of its neighbors.
Example: Input: {&amp;quot;$id&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;neighbors&amp;quot;:[{&amp;quot;$id&amp;quot;:&amp;quot;2&amp;quot;,&amp;quot;neighbors&amp;quot;:[{&amp;quot;$ref&amp;quot;:&amp;quot;1&amp;quot;},{&amp;quot;$id&amp;quot;:&amp;quot;3&amp;quot;,&amp;quot;neighbors&amp;quot;:[{&amp;quot;$ref&amp;quot;:&amp;quot;2&amp;quot;},{&amp;quot;$id&amp;quot;:&amp;quot;4&amp;quot;,&amp;quot;neighbors&amp;quot;:[{&amp;quot;$ref&amp;quot;:&amp;quot;3&amp;quot;},{&amp;quot;$ref&amp;quot;:&amp;quot;1&amp;quot;}],&amp;quot;val&amp;quot;:4}],&amp;quot;val&amp;quot;:3}],&amp;quot;val&amp;quot;:2},{&amp;quot;$ref&amp;quot;:&amp;quot;4&amp;quot;}],&amp;quot;val&amp;quot;:1} Explanation: Node 1&#39;s value is 1, and it has two neighbors: Node 2 and 4. Node 2&#39;s value is 2, and it has two neighbors: Node 1 and 3. Node 3&#39;s value is 3, and it has two neighbors: Node 2 and 4.</description>
    </item>
    
    <item>
      <title>Graph and Tree Basics</title>
      <link>http://www.hashnopolis.com/post/2019/03/graph-and-tree-basics/</link>
      <pubDate>Thu, 07 Mar 2019 15:29:47 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/03/graph-and-tree-basics/</guid>
      <description>Tree: n - 1 edges, all nodes connected, contains no loop.</description>
    </item>
    
    <item>
      <title>Number of Connected Components in an Undirected Graph</title>
      <link>http://www.hashnopolis.com/post/2019/03/number-of-connected-components-in-an-undirected-graph/</link>
      <pubDate>Thu, 07 Mar 2019 11:40:26 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/03/number-of-connected-components-in-an-undirected-graph/</guid>
      <description>Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to find the number of connected components in an undirected graph.
Example 1: Input: n = 5 and edges = [[0, 1], [1, 2], [3, 4]] 0 3 | | 1 --- 2 4 Output: 2  Example 2: Input: n = 5 and edges = [[0, 1], [1, 2], [2, 3], [3, 4]] 0 4 | | 1 --- 2 --- 3 Output: 1  Note: You can assume that no duplicate edges will appear in edges.</description>
    </item>
    
    <item>
      <title>Graph Valid Tree</title>
      <link>http://www.hashnopolis.com/post/2019/03/graph-valid-tree/</link>
      <pubDate>Wed, 06 Mar 2019 23:46:04 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/03/graph-valid-tree/</guid>
      <description>Given n nodes labeled from 0 to n-1 and a list of undirected edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree.
###Example 1:
Input: n = 5, and edges = [[0,1], [0,2], [0,3], [1,4]] Output: true  Example 2: Input: n = 5, and edges = [[0,1], [1,2], [2,3], [1,3], [1,4]] Output: false  ###Note: you can assume that no duplicate edges will appear in edges.</description>
    </item>
    
    <item>
      <title>Course Schedule</title>
      <link>http://www.hashnopolis.com/post/2018/12/course-schedule/</link>
      <pubDate>Sun, 09 Dec 2018 23:29:18 +0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2018/12/course-schedule/</guid>
      <description>There are a total of n courses you have to take, labeled from 0 to n-1.
Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]
Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?
Example 1 Input: 2, [[1,0]] Output: true Explanation: There are a total of 2 courses to take.</description>
    </item>
    
  </channel>
</rss>