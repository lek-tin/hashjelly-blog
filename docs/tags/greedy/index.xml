<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>greedy on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/greedy/</link>
    <description>Recent content in greedy on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Sun, 01 Mar 2020 09:27:30 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/greedy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Partition Labels</title>
      <link>http://www.hashnopolis.com/post/2020/03/partition-labels/</link>
      <pubDate>Sun, 01 Mar 2020 09:27:30 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2020/03/partition-labels/</guid>
      <description>A string S of lowercase letters is given. We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.
Example 1 Input: S = &amp;quot;ababcbacadefegdehijhklij&amp;quot; Output: [9,7,8] Explanation: The partition is &amp;quot;ababcbaca&amp;quot;, &amp;quot;defegde&amp;quot;, &amp;quot;hijhklij&amp;quot;. This is a partition so that each letter appears in at most one part.</description>
    </item>
    
    <item>
      <title>Minimum Cost to Connect Sticks</title>
      <link>http://www.hashnopolis.com/post/2020/02/minimum-cost-to-connect-sticks/</link>
      <pubDate>Sat, 29 Feb 2020 20:46:40 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2020/02/minimum-cost-to-connect-sticks/</guid>
      <description>Given n sticks of different lengths, we need to connect these sticks into one stick. We can connect only 2 sticks at a time. The cost required to connect 2 sticks is equal to sum of their lengths. The length of this connected stick is also equal to the sum of their lengths. This process is repeated until n sticks are connected into a single stick. Find the min possible cost required to connect all sticks.</description>
    </item>
    
    <item>
      <title>Maximum Swap</title>
      <link>http://www.hashnopolis.com/post/2020/02/maximum-swap/</link>
      <pubDate>Thu, 13 Feb 2020 12:22:27 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2020/02/maximum-swap/</guid>
      <description>Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.
Example 1: Input: 2736 Output: 7236 Explanation: Swap the number 2 and the number 7. Example 2: Input: 9973 Output: 9973 Explanation: No swap. Note:  The given number is in the range [0, 10^8]  Solution class Solution: def maximumSwap(self, num: int) -&amp;gt; int: numChars = list(str(num)) n = len(numChars) last = [0 for i in range(10)] for i in range(n): last[ord(numChars[i])-ord(&amp;#34;0&amp;#34;)] = i for i in range(n): # test the biggest number first j = 9 # We wanna find out the largest digit on the right while j &amp;gt; int(ord(numChars[i])-ord(&amp;#34;0&amp;#34;)): if last[j] &amp;gt; i: temp = numChars[i] numChars[i] = numChars[last[j]] numChars[last[j]] = temp return int(&amp;#34;&amp;#34;.</description>
    </item>
    
    <item>
      <title>Campus Bikes</title>
      <link>http://www.hashnopolis.com/post/2019/10/campus-bikes/</link>
      <pubDate>Mon, 14 Oct 2019 20:13:22 -0700</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/10/campus-bikes/</guid>
      <description>On a campus represented as a 2D grid, there are N workers and M bikes, with N &amp;lt;= M. Each worker and bike is a 2D coordinate on this grid.
Our goal is to assign a bike to each worker. Among the available bikes and workers, we choose the (worker, bike) pair with the shortest Manhattan distance between each other, and assign the bike to that worker. (If there are multiple (worker, bike) pairs with the same shortest Manhattan distance, we choose the pair with the smallest worker index; if there are multiple ways to do that, we choose the pair with the smallest bike index).</description>
    </item>
    
    <item>
      <title>Task Scheduler</title>
      <link>http://www.hashnopolis.com/post/2018/11/task-scheduler/</link>
      <pubDate>Mon, 12 Nov 2018 19:39:03 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2018/11/task-scheduler/</guid>
      <description>Given a char array representing tasks CPU need to do. It contains capital letters A to Z where different letters represent different tasks.Tasks could be done without original order. Each task could be done in one interval. For each interval, CPU could finish one task or just be idle.
However, there is a non-negative cooling interval n that means between two same tasks, there must be at least n intervals that CPU are doing different tasks or just be idle.</description>
    </item>
    
    <item>
      <title>Best Time to Buy and Sell Stock II</title>
      <link>http://www.hashnopolis.com/post/2018/09/best-time-to-buy-and-sell-stock-ii/</link>
      <pubDate>Thu, 06 Sep 2018 23:39:13 +0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2018/09/best-time-to-buy-and-sell-stock-ii/</guid>
      <description>Say you have an array for which the ith element is the price of a given stock on day i.
Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).
Note: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</description>
    </item>
    
  </channel>
</rss>