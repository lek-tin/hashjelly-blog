<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Union Find on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/union-find/</link>
    <description>Recent content in Union Find on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Tue, 10 Sep 2019 12:01:01 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/union-find/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Longest Consecutive Sequence</title>
      <link>http://www.hashnopolis.com/post/2019/09/longest-consecutive-sequence/</link>
      <pubDate>Tue, 10 Sep 2019 12:01:01 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/09/longest-consecutive-sequence/</guid>
      <description> Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
Your algorithm should run in O(n) complexity.
Example Input: [100, 4, 200, 1, 3, 2] Output: 4 Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.  Solution # Time: o(n) class Solution: def longestConsecutive(self, nums: List[int]) -&amp;gt; int: # Count occurence of nums mapping = {} for num in nums: mapping[num] = True # init longest length longest = 0 # iterate over nums for num in nums: if num in mapping: # num exists in mapping =&amp;gt; init l = 1 l = 1 # num was counted, so we delete num del mapping[num] left, right = num-1, num+1 # Move left while left in mapping: # left was counted, so we delete left del mapping[left] left -= 1 l += 1 # Move right while right in mapping: # right was counted, so we delete right del mapping[right] right += 1 l += 1 # Update longest longest = max(longest, l) return longest  </description>
    </item>
    
  </channel>
</rss>