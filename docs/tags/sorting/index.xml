<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sorting on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/sorting/</link>
    <description>Recent content in sorting on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Wed, 08 Apr 2020 07:21:58 -0700</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/sorting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Insertion Sort List</title>
      <link>http://www.hashnopolis.com/post/insertion-sort-list/</link>
      <pubDate>Wed, 08 Apr 2020 07:21:58 -0700</pubDate>
      
      <guid>http://www.hashnopolis.com/post/insertion-sort-list/</guid>
      <description>Algorithm of Insertion Sort:
Insertion sort iterates, consuming one input element each repetition, and growing a sorted output list. At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there. It repeats until no input elements remain.
Example 1 Input: 4-&amp;gt;2-&amp;gt;1-&amp;gt;3 Output: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4 Example 2 Input: -1-&amp;gt;5-&amp;gt;3-&amp;gt;4-&amp;gt;0 Output: -1-&amp;gt;0-&amp;gt;3-&amp;gt;4-&amp;gt;5 Solution # Definition for singly-linked list. # class ListNode: # def __init__(self, x): # self.</description>
    </item>
    
    <item>
      <title>Sort List</title>
      <link>http://www.hashnopolis.com/post/sort-list/</link>
      <pubDate>Wed, 08 Apr 2020 04:17:30 -0700</pubDate>
      
      <guid>http://www.hashnopolis.com/post/sort-list/</guid>
      <description>Sort a linked list in O(n log n) time using constant space complexity.
Example 1 Input: 4-&amp;gt;2-&amp;gt;1-&amp;gt;3 Output: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4 Example 2 Input: -1-&amp;gt;5-&amp;gt;3-&amp;gt;4-&amp;gt;0 Output: -1-&amp;gt;0-&amp;gt;3-&amp;gt;4-&amp;gt;5 Solution (merge sort - top down) Time: O(NlogN)
Space: O(logN)
Doesn&amp;rsquo;t satisfy the requirement
# Definition for singly-linked list. # class ListNode: # def __init__(self, x): # self.val = x # self.next = None class Solution: def sortList(self, head: ListNode) -&amp;gt; ListNode: if not head or not head.</description>
    </item>
    
  </channel>
</rss>