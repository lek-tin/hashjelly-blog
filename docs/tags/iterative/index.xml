<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iterative on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/iterative/</link>
    <description>Recent content in Iterative on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Sat, 10 Aug 2019 23:51:13 -0700</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/iterative/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reverse Linked List</title>
      <link>http://www.hashnopolis.com/post/2019/08/reverse-linked-list/</link>
      <pubDate>Sat, 10 Aug 2019 23:51:13 -0700</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/08/reverse-linked-list/</guid>
      <description>Reverse a singly linked list.
Example: Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL Output: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL  Follow up: A linked list can be reversed either iteratively or recursively. Could you implement both?
Solution: /** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode(int x) { val = x; } * } */ class Solution { public ListNode reverseList(ListNode head) { ListNode cur = head, prev = null, after = new ListNode(0); // null 1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 4 -&amp;gt; 5 -&amp;gt; NULL // prev cur after while (cur !</description>
    </item>
    
  </channel>
</rss>