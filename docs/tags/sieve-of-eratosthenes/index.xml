<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sieve of Eratosthenes on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/sieve-of-eratosthenes/</link>
    <description>Recent content in Sieve of Eratosthenes on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Fri, 09 Nov 2018 18:52:59 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/sieve-of-eratosthenes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Count Primes</title>
      <link>http://www.hashnopolis.com/post/2018/11/count-primes/</link>
      <pubDate>Fri, 09 Nov 2018 18:52:59 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2018/11/count-primes/</guid>
      <description> Count the number of prime numbers less than a non-negative number, n.
Example Input: 10 Output: 4  Explanation There are 4 prime numbers less than 10, they are 2, 3, 5, 7. Solution class Solution: def countPrimes(self, n): &amp;quot;&amp;quot;&amp;quot; :type n: int :rtype: int &amp;quot;&amp;quot;&amp;quot; if n &amp;lt;= 2: return 0 marked = [0] * (n-1) for i in range(int(n**0.5)+1): if marked[i] != 1: prime = i + 2 for j in range(prime**2-2, n-1, prime): marked[j] = 1 count = 0 for c, k in enumerate(marked): # We are counting numbers less than n, hence len(marked)-1 if k == 0 and c &amp;lt; len(marked)-1: count += 1 return count  </description>
    </item>
    
  </channel>
</rss>