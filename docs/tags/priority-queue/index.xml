<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>priority-queue on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/priority-queue/</link>
    <description>Recent content in priority-queue on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Sat, 09 Mar 2019 02:08:26 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/priority-queue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kth Largest Element in a Stream</title>
      <link>http://www.hashnopolis.com/post/2019/03/kth-largest-element-in-a-stream/</link>
      <pubDate>Sat, 09 Mar 2019 02:08:26 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/03/kth-largest-element-in-a-stream/</guid>
      <description>Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element.
Your KthLargest class will have a constructor which accepts an integer k and an integer array nums, which contains initial elements from the stream. For each call to the method KthLargest.add, return the element representing the kth largest element in the stream.</description>
    </item>
    
  </channel>
</rss>