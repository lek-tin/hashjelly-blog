<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>modulo on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/modulo/</link>
    <description>Recent content in modulo on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Wed, 16 Jan 2019 18:44:45 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/modulo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reverse Integer</title>
      <link>http://www.hashnopolis.com/post/2019/01/reverse-integer/</link>
      <pubDate>Wed, 16 Jan 2019 18:44:45 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/01/reverse-integer/</guid>
      <description>Given a 32-bit signed integer, reverse digits of an integer.
Example 1 Input: 123 Output: 321 Example 2 Input: -123 Output: -321 Example 3 Input: 120 Output: 21 Note Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
Solution class Solution(object): def reverse(self, x): &amp;#34;&amp;#34;&amp;#34; :type x: int :rtype: int &amp;#34;&amp;#34;&amp;#34; if x == &amp;#34;&amp;#34; or x == None: return x res = &amp;#34;&amp;#34; if x &amp;gt; 0 else &amp;#34;-&amp;#34; string = str(abs(x)) for i in range(len(string)-1, -1, -1): res += string[i] res = int(res) if res &amp;lt; -2**31 or res &amp;gt;= 2**31: return 0 return int(res) class Solution: def reverse(self, x: int) -&amp;gt; int: isNegative = x &amp;lt; 0 x = abs(x) new_x = 0 while x !</description>
    </item>
    
  </channel>
</rss>