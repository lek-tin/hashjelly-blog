<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming-language on Hashnopolis</title>
    <link>http://www.hashnopolis.com/categories/programming-language/</link>
    <description>Recent content in programming-language on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Tue, 13 Nov 2018 22:05:44 -0800</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/categories/programming-language/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Arrays in Python</title>
      <link>http://www.hashnopolis.com/post/arrays-in-python/</link>
      <pubDate>Tue, 13 Nov 2018 22:05:44 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/arrays-in-python/</guid>
      <description>Reverse an array arr = [1, 2, 3, 4, 5, 6, 7, 8] reversedArray = arr[::-1] # [8, 7, 6, 5, 4, 3, 2, 1] arr[3:5] = arr[3:5][::-1] Slices with step s[i:j:k] means &amp;ldquo;slice of s from i to j with step k&amp;rdquo;. When i and j are absent, the whole sequence is assumed and thus s[::k] means &amp;ldquo;every k-th item&amp;rdquo; in the entire sequence.
s = range(20) # output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] # 3rd item from s: s[::3] # output: [0, 3, 6, 9, 12, 15, 18] # 3rd item from s[2:]: s[2:] # output: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] s[2::3] # output: [2, 5, 8, 11, 14, 17] # 3rd item from s[5:12]: s[5:12] # output: [5, 6, 7, 8, 9, 10, 11] s[5:12:3] # output: [5, 8, 11] # 3rd item from s[:10]: s[:10] # output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] s[:10:3] # output: [0, 3, 6, 9] Clone a list newArr = oldArr[:]</description>
    </item>
    
    <item>
      <title>Arrays in CPP</title>
      <link>http://www.hashnopolis.com/post/arrays-in-cpp/</link>
      <pubDate>Sat, 10 Nov 2018 13:50:30 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/arrays-in-cpp/</guid>
      <description>To get the number of elements in an array in C++:
sizeof(awesomeArray) = total number of bytes allocated for awesomeArray array. Divide it with the size of one element in the array will give you the number of elements in the array: sizeof(awesomeArray)/sizeof(awesomeArray[0])</description>
    </item>
    
  </channel>
</rss>