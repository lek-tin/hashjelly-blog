<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>newton-method on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/newton-method/</link>
    <description>Recent content in newton-method on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Thu, 19 Sep 2019 23:47:10 -0700</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/newton-method/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Valid Perfect Square</title>
      <link>http://www.hashnopolis.com/post/2019/09/valid-perfect-square/</link>
      <pubDate>Thu, 19 Sep 2019 23:47:10 -0700</pubDate>
      
      <guid>http://www.hashnopolis.com/post/2019/09/valid-perfect-square/</guid>
      <description>Given a positive integer num, write a function which returns True if num is a perfect square else False.
Note: Do not use any built-in library function such as sqrt.
Example 1: Input: 16 Output: true Example 2: Input: 14 Output: false Solution Binary search version 1
class Solution: def isPerfectSquare(self, num: int) -&amp;gt; bool: if num == 1: return True left, right = 0, num while left &amp;lt;= right: mid = left + (right-left)//2 t = mid*mid if t == num: return True if t &amp;lt; num: left = mid + 1 else: right = mid - 1 return False Binary search version 2</description>
    </item>
    
  </channel>
</rss>