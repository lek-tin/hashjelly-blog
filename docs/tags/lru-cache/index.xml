<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lru-cache on Hashnopolis</title>
    <link>http://www.hashnopolis.com/tags/lru-cache/</link>
    <description>Recent content in lru-cache on Hashnopolis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Hashnopolis</copyright>
    <lastBuildDate>Tue, 26 Mar 2019 22:51:52 -0700</lastBuildDate>
    
	<atom:link href="http://www.hashnopolis.com/tags/lru-cache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LRU Cache Miss Count</title>
      <link>http://www.hashnopolis.com/post/lru-cache-miss-count/</link>
      <pubDate>Tue, 26 Mar 2019 22:51:52 -0700</pubDate>
      
      <guid>http://www.hashnopolis.com/post/lru-cache-miss-count/</guid>
      <description>Solution public class CacheMiss { public int missCount(int[] array, int size) { if (array == null) return 0; List&amp;lt;Integer&amp;gt; cache = new LinkedList&amp;lt;&amp;gt;(); int count = 0; for (int i = 0; i &amp;lt; array.length; i++) { if (cache.contains(array[i])) { cache.remove(new Integer(array[i])); } else { count++; if (size == cache.size()) cache.remove(0); } cache.add(array[i]); } return count; } } </description>
    </item>
    
    <item>
      <title>LRU Cache</title>
      <link>http://www.hashnopolis.com/post/lru-cache/</link>
      <pubDate>Sun, 11 Nov 2018 15:33:09 -0800</pubDate>
      
      <guid>http://www.hashnopolis.com/post/lru-cache/</guid>
      <description>Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and put.
get(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1. put(key, value) - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.</description>
    </item>
    
  </channel>
</rss>